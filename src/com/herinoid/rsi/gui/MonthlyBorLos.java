package com.herinoid.rsi.gui;

import com.herinoid.rsi.dao.BangsalDao;
import com.herinoid.rsi.dao.BorDao;
import com.herinoid.rsi.model.Bangsal;
import com.herinoid.rsi.util.Utils;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import java.util.List;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import simrskhanza.DlgCariBangsal;
import simrskhanza.DlgPenanggungJawab;

public class MonthlyBorLos extends javax.swing.JDialog {

    private sekuel Sequel = new sekuel();
    private validasi Valid = new validasi();
    private Connection koneksi = koneksiDB.condb();
    private PreparedStatement ps;
    private DlgCariBangsal bangsal = new DlgCariBangsal(null, false);
    private ResultSet rs;
    private int i = 0, deku = 0, urine = 0, sputum = 0, darah = 0, antibiotik = 0, isiPeriode, jmlCVL,
            jmlIVL, jmlUC, jmlVAP, jmlIAD, jmlPLEB, jmlISK, jmlILO, jmldeku, jmlsputum,
            jmlHAP, jmlTinea, jmlScabies, jmldarah, jmlurine, jmlANTIBIOTIK;

    /**
     * Created by herinoid
     *
     * @param parent
     * @param modal
     */
    public MonthlyBorLos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cmbTahun.setVisible(false);
        HTMLEditorKit kit = new HTMLEditorKit();
        LoadHTML.setEditable(true);
        LoadHTML.setEditorKit(kit);
        LoadHTML.setEditable(true);
        LoadHTML.setEditorKit(kit);
        StyleSheet styleSheet = kit.getStyleSheet();
        styleSheet.addRule(
                ".isi td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
                + ".isi2 td{font: 8.5px tahoma;height:12px;background: #ffffff;color:#323232;}"
                + ".isi3 td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
                + ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
        );
        Document doc = kit.createDefaultDocument();
        LoadHTML.setDocument(doc);
        LoadHTML.setDocument(doc);

        bangsal.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
            }

            @Override
            public void windowClosing(WindowEvent e) {
            }

            @Override
            public void windowClosed(WindowEvent e) {
                if (bangsal.getTable().getSelectedRow() != -1) {
//                    NmKamar.setText(bangsal.getTable().getValueAt(bangsal.getTable().getSelectedRow(),1).toString());
//                    NmKamar.requestFocus();                           
                }
            }

            @Override
            public void windowIconified(WindowEvent e) {
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
            }

            @Override
            public void windowActivated(WindowEvent e) {
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
            }
        });
    }
    private Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Kd2 = new widget.TextBox();
        internalFrame1 = new widget.InternalFrame();
        panelisi1 = new widget.panelisi();
        label9 = new widget.Label();
        BtnPrint = new widget.Button();
        BtnKeluar = new widget.Button();
        Scroll = new widget.ScrollPane();
        LoadHTML = new widget.editorpane();
        panelisi4 = new widget.panelisi();
        label11 = new widget.Label();
        cboPeriode = new widget.ComboBox();
        cmbTahun = new widget.Tanggal();
        Tgl1 = new widget.Tanggal();
        lblSd = new widget.Label();
        Tgl2 = new widget.Tanggal();
        cboBangsal = new widget.ComboBox();
        btnCari = new widget.Button();

        Kd2.setName("Kd2"); // NOI18N
        Kd2.setPreferredSize(new java.awt.Dimension(207, 23));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Laporan BOR | LOS | TOI | BTO ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setPreferredSize(new java.awt.Dimension(100, 56));
        panelisi1.setLayout(null);

        label9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(20, 30));
        panelisi1.add(label9);
        label9.setBounds(6, 10, 20, 30);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelisi1.add(BtnPrint);
        BtnPrint.setBounds(630, 10, 100, 30);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);
        BtnKeluar.setBounds(740, 10, 100, 30);

        internalFrame1.add(panelisi1, java.awt.BorderLayout.PAGE_END);

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        LoadHTML.setBorder(null);
        LoadHTML.setName("LoadHTML"); // NOI18N
        Scroll.setViewportView(LoadHTML);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        panelisi4.setName("panelisi4"); // NOI18N
        panelisi4.setPreferredSize(new java.awt.Dimension(100, 44));

        label11.setText("Periode :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(55, 23));
        panelisi4.add(label11);

        cboPeriode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Harian", "Mingguan", "Bulanan", "Triwulan", "Semester", "Tahunan" }));
        cboPeriode.setName("cboPeriode"); // NOI18N
        cboPeriode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPeriodeActionPerformed(evt);
            }
        });
        panelisi4.add(cboPeriode);

        cmbTahun.setDisplayFormat("YYYY");
        cmbTahun.setName("cmbTahun"); // NOI18N
        panelisi4.add(cmbTahun);

        Tgl1.setDisplayFormat("dd-MM-yyyy");
        Tgl1.setName("Tgl1"); // NOI18N
        Tgl1.setPreferredSize(new java.awt.Dimension(95, 23));
        panelisi4.add(Tgl1);

        lblSd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSd.setText("s.d.");
        lblSd.setName("lblSd"); // NOI18N
        lblSd.setPreferredSize(new java.awt.Dimension(30, 23));
        panelisi4.add(lblSd);

        Tgl2.setDisplayFormat("dd-MM-yyyy");
        Tgl2.setName("Tgl2"); // NOI18N
        Tgl2.setPreferredSize(new java.awt.Dimension(95, 23));
        panelisi4.add(Tgl2);

        cboBangsal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Per Kelas", "Per Bangsal" }));
        cboBangsal.setName("cboBangsal"); // NOI18N
        panelisi4.add(cboBangsal);

        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search.png"))); // NOI18N
        btnCari.setMnemonic('2');
        btnCari.setToolTipText("Alt+2");
        btnCari.setName("btnCari"); // NOI18N
        btnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        btnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCariKeyPressed(evt);
            }
        });
        panelisi4.add(btnCari);

        internalFrame1.add(panelisi4, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
private void KdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
    Valid.pindah(evt,BtnCari,Nm);
}//GEN-LAST:event_TKdKeyPressed
*/

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {

            File g = new File("file2.css");
            BufferedWriter bg = new BufferedWriter(new FileWriter(g));
            bg.write(
                    ".isi td{border-right: 1px solid #e2e7dd;font: 11px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
                    + ".isi2 td{font: 11px tahoma;height:12px;background: #ffffff;color:#323232;}"
                    + ".isi3 td{border-right: 1px solid #e2e7dd;font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
                    + ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
            );
            bg.close();

            File f = new File("HarianHAIs.html");
            BufferedWriter bw = new BufferedWriter(new FileWriter(f));
            bw.write(LoadHTML.getText().replaceAll("<head>", "<head><link href=\"file2.css\" rel=\"stylesheet\" type=\"text/css\" />"
                    + "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"
                    + "<tr class='isi2'>"
                    + "<td valign='top' align='center'>"
                    + "<font size='4' face='Tahoma'>" + akses.getnamars() + "</font><br>"
                    + akses.getalamatrs() + ", " + akses.getkabupatenrs() + ", " + akses.getpropinsirs() + "<br>"
                    + akses.getkontakrs() + ", E-mail : " + akses.getemailrs() + "<br><br>"
                    + "</td>"
                    + "</tr>"
                    + "</table>")
            );
            bw.close();
            Desktop.getDesktop().browse(f.toURI());
        } catch (Exception e) {
            System.out.println("Notifikasi : " + e);
        }

        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnPrintActionPerformed(null);
        } else {
            Valid.pindah(evt, Tgl2, BtnKeluar);
        }
    }//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            dispose();
        } else {
            Valid.pindah(evt, BtnPrint, Tgl1);
        }
    }//GEN-LAST:event_BtnKeluarKeyPressed

private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
    if (cboBangsal.getSelectedIndex() == 0) {
        prosesCariPerKelas();
    } else {
        prosesCariPerBangsal();
    }

}//GEN-LAST:event_btnCariActionPerformed

private void btnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCariKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
        btnCariActionPerformed(null);
    } else {
        Valid.pindah(evt, Tgl2, BtnPrint);
    }
}//GEN-LAST:event_btnCariKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        prosesCari();
    }//GEN-LAST:event_formWindowOpened

    private void cboPeriodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPeriodeActionPerformed
        // TODO add your handling code here:
         if (cboPeriode.getSelectedIndex() == 5) {
            cmbTahun.setVisible(true);
            Tgl1.setVisible(false);
            Tgl2.setVisible(false);
            lblSd.setVisible(false);
        } else {
            cmbTahun.setVisible(false);
            Tgl1.setVisible(true);
            Tgl2.setVisible(true);
            lblSd.setVisible(true);
            if(cboPeriode.getSelectedIndex()==1){
                Tgl1.setDate(Utils.getPrevWeekDate(new Date()));
            }else if(cboPeriode.getSelectedIndex()==2){
                Tgl1.setDate(Utils.getFirstDayInMonth(new Date()));
                Tgl2.setDate(Utils.getLastDayInMonth(new Date()));
            }else if(cboPeriode.getSelectedIndex()==3){
                Tgl1.setDate(Utils.getTriWulanDate(new Date()));
            }else if(cboPeriode.getSelectedIndex()==4){
                Tgl1.setDate(Utils.getSemesterDate(new Date()));
            }
        }
    }//GEN-LAST:event_cboPeriodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            MonthlyBorLos dialog = new MonthlyBorLos(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.TextBox Kd2;
    private widget.editorpane LoadHTML;
    private widget.ScrollPane Scroll;
    private widget.Tanggal Tgl1;
    private widget.Tanggal Tgl2;
    private widget.Button btnCari;
    private widget.ComboBox cboBangsal;
    private widget.ComboBox cboPeriode;
    private widget.Tanggal cmbTahun;
    private widget.InternalFrame internalFrame1;
    private widget.Label label11;
    private widget.Label label9;
    private widget.Label lblSd;
    private widget.panelisi panelisi1;
    private widget.panelisi panelisi4;
    // End of variables declaration//GEN-END:variables

    private void prosesCariPerBangsal() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            StringBuilder htmlContent = new StringBuilder();
            htmlContent.append(
                    "<tr class='isi'>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='2%'>No.</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='15%' >Bangsal</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%' >BOR</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%' >LOS</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%' >BTO</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%' >TOI</td>"
                    + "</tr>"
            );
            List<Bangsal> bangsals = BangsalDao.getAllBangsal();
            int i = 0;
            for (Bangsal b : bangsals) {
                double bor = BorDao.getBor(Tgl1.getDate(), Tgl2.getDate(), b.getKode());
                double vlos = BorDao.getAvlos(Tgl1.getDate(), Tgl2.getDate(), b.getKode());
                double toi = BorDao.getToi(Tgl1.getDate(), Tgl2.getDate(), b.getKode());
                double bto = BorDao.getBto(Tgl1.getDate(), Tgl2.getDate(), b.getKode());
                i++;
                htmlContent.append(
                        "<tr class='isi'>"
                        + "<td valign='middle' align='center'>" + i + "</td>"
                        + "<td valign='middle' align='center'>" + b.getNama() + "</td>"
                        + "<td valign='middle' align='center'>" + Utils.format(bor, 2) + "</td>"
                        + "<td valign='middle' align='center'>" + Utils.format(vlos, 2) + "</td>"
                        + "<td valign='middle' align='center'>" + Utils.format(bto, 2) + "</td>"
                        + "<td valign='middle' align='center'>" + Utils.format(toi, 2) + "</td>"
                        + "</tr>"
                );

            }
            double allBor = BorDao.getAllBor(Tgl1.getDate(), Tgl2.getDate());
            double allLos = BorDao.getAvlosAll(Tgl1.getDate(), Tgl2.getDate());
            double allToi = BorDao.getToiAll(Tgl1.getDate(), Tgl2.getDate());
            double allBto = BorDao.getBtoAll(Tgl1.getDate(), Tgl2.getDate());

            htmlContent.append(
                    "<tr class='isi'>"
                    + "<td valign='middle' align='center' colspan=2><b>Total : <b></td>"
                    + "<td valign='middle' align='center'>" + Utils.format(allBor, 2) + "</td>"
                    + "<td valign='middle' align='center'>" + Utils.format(allLos, 2) + "</td>"
                    + "<td valign='middle' align='center'>" + Utils.format(allBto, 2) + "</td>"
                    + "<td valign='middle' align='center'>" + Utils.format(allToi, 2) + "</td>"
                    + "</tr>"
            );
            LoadHTML.setText(
                    "<html>"
                    + "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"
                    + htmlContent.toString()
                    + "</table>"
                    + "</html>");
        } catch (Exception e) {
            System.out.println("monthly bor los proses cari : " + e);
        }
        this.setCursor(Cursor.getDefaultCursor());

    }

    private void prosesCariPerKelas() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            StringBuilder htmlContent = new StringBuilder();
            htmlContent.append(
                    "<tr class='isi'>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='2%'>No.</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='15%' >Bangsal</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='15%' >Kelas</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%' >BOR</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%' >LOS</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%' >BTO</td>"
                    + "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%' >TOI</td>"
                    + "</tr>"
            );
            List<Bangsal> bangsalKelases = BangsalDao.getAllKelasInBangsal();
            int i = 0;
            for (Bangsal b : bangsalKelases) {
                double bor = BorDao.getBorPerKelas(Tgl1.getDate(), Tgl2.getDate(), b.getKode(), b.getKelas());
                double vlos = BorDao.getAvlosPerKelas(Tgl1.getDate(), Tgl2.getDate(), b.getKode(), b.getKelas());
                double toi = BorDao.getToiPerKelas(Tgl1.getDate(), Tgl2.getDate(), b.getKode(), b.getKelas());
                double bto = BorDao.getBtoPerKelas(Tgl1.getDate(), Tgl2.getDate(), b.getKode(), b.getKelas());
                i++;
                htmlContent.append(
                        "<tr class='isi'>"
                        + "<td valign='middle' align='center'>" + i + "</td>"
                        + "<td valign='middle' >" + b.getNama() + "</td>"
                        + "<td valign='middle' >" + b.getKelas() + "</td>"
                        + "<td valign='middle' align='center'>" + Utils.format(bor, 2) + "</td>"
                        + "<td valign='middle' align='center'>" + Utils.format(vlos, 2) + "</td>"
                        + "<td valign='middle' align='center'>" + Utils.format(bto, 2) + "</td>"
                        + "<td valign='middle' align='center'>" + Utils.format(toi, 2) + "</td>"
                        + "</tr>"
                );

            }
            double allBor = BorDao.getAllBor(Tgl1.getDate(), Tgl2.getDate());
            double allLos = BorDao.getAvlosAll(Tgl1.getDate(), Tgl2.getDate());
            double allToi = BorDao.getToiAll(Tgl1.getDate(), Tgl2.getDate());
            double allBto = BorDao.getBtoAll(Tgl1.getDate(), Tgl2.getDate());

            htmlContent.append(
                    "<tr class='isi'>"
                    + "<td valign='middle' align='center' colspan=3><b>Total : <b></td>"
                    + "<td valign='middle' align='center'>" + Utils.format(allBor, 2) + "</td>"
                    + "<td valign='middle' align='center'>" + Utils.format(allLos, 2) + "</td>"
                    + "<td valign='middle' align='center'>" + Utils.format(allBto, 2) + "</td>"
                    + "<td valign='middle' align='center'>" + Utils.format(allToi, 2) + "</td>"
                    + "</tr>"
            );
            LoadHTML.setText(
                    "<html>"
                    + "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"
                    + htmlContent.toString()
                    + "</table>"
                    + "</html>");
        } catch (Exception e) {
            System.out.println("monthly bor los proses cari : " + e);
        }
        this.setCursor(Cursor.getDefaultCursor());

    }

    public void isCek() {
        BtnPrint.setEnabled(akses.getharian_HAIs());
    }

}
